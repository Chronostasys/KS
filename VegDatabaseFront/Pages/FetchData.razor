@page "/fetchdata"
@inject Microsoft.Extensions.Hosting.IHostEnvironment env

@using VegDatabaseFront.Data

<h1>蔬菜管理系统</h1>

<p>各种数据表</p>
<input class="form-control form-text" placeholder="Search hear..." @bind="sw" @oninput="Search" />
@if (!search && !edit && !add)
{
    Join2();
    <div class="btn-group">
        <button class="btn btn-dark" style="margin-top:20px;margin-bottom:20px" @onclick="a=> Change(0)">蔬菜分类表</button>
        <button class="btn btn-dark" style="margin-top:20px;margin-bottom:20px" @onclick="a=> Change(1)">蔬菜信息表</button>
        <button class="btn btn-dark" style="margin-top:20px;margin-bottom:20px" @onclick="a=> Change(2)">蔬菜种植表</button>
        <button class="btn btn-dark" style="margin-top:20px;margin-bottom:20px" @onclick="a=> Change(3)">总表</button>
        <button class="btn btn-dark" style="margin-top:20px;margin-bottom:20px" @onclick="a=> Change(4)">统计</button>
    </div>
}
@if (search)
{
    searchResult = searchResult.Where(s => int.Parse(s.Year) <= EndYear && int.Parse(s.Year) >= startYear);
    <h2>搜索结果</h2>
    <div class="container">
        <div class="row">
            <div class="col-3">
                排序方式：
                <select class="form-control custom-select" @onchange="a=> {
                                                                       orderby = a.Value.ToString();
                                                                       StateHasChanged();
                                                                   }">
                    @foreach (var item in typeof(JoinedClass2).GetProperties())
                    {
                        if (item.Name == orderby)
                        {
                            <option value="@item.Name" selected>@item.Name</option>
                        }
                        else
                        {
                            <option value="@item.Name">@item.Name</option>
                        }
                    }
                </select>
            </div>
            <div class="offset-1 col-3">
                最小重量：
                <input class="form-control form-text" @bind="fmin" />
            </div>
            <div class="offset-1 col-3">
                最大重量：
                <input class="form-control form-text" @bind="fmax" />
            </div>
        </div>
        <div class="row">
            <div class="offset-4 col-3">
                最小年份：
                <input class="form-control form-text" @bind="startYear" />
            </div>
            <div class="offset-1 col-3">
                最大年份：
                <input class="form-control form-text" @bind="EndYear" />
            </div>
            
            
            @*<button class="col-2" @onclick>应用</button>*@
        </div>
    </div>
    <button class="btn btn-dark" @onclick="(c=> { search = false;sw = string.Empty; })">返回列表</button>
    jcSearch = searchResult.Where(s => s.Weight <= fmax && s.Weight >= fmin).OrderByDescending(j => j.GetType().GetProperty(orderby).GetValue(j));
    <table class="table">
        <thead>
            <tr>
                <th>ClassId</th>
                <th>ClassName</th>
                <th>Nutrition</th>
                <th>VegId</th>
                <th>VegName</th>
                <th>Year</th>
                <th>Weight</th>
                <th>Area</th>
                <th>Id</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in jcSearch)
            {
                <tr>
                    <td>
                        @item.ClassId
                    </td>
                    <td>@item.ClassName</td>
                    <td>@item.Nutrition</td>
                    <td>@item.VegId</td>
                    <td>@item.VegName</td>
                    <td>@item.Year</td>
                    <td>@item.Weight</td>
                    <td>@item.Area</td>
                    <td>@item.Id</td>
                </tr>
            }
        </tbody>
    </table>
    <DxChart Data="@jcSearch">
        <DxChartTitle Text="搜索结果" />
        <DxChartCommonSeries AggregationMethod="@Enumerable.Sum"
                             NameField="@((JoinedClass2 s) => s.VegName)"
                             ArgumentField="@((JoinedClass2 s) => s.Year)"
                             ValueField="@((JoinedClass2 s) => s.Weight)">
            <SeriesTemplate Context="settings">
                <DxChartBarSeries Settings="@settings">
                    <DxChartSeriesLabel Position="RelativePosition.Inside" Visible="true"></DxChartSeriesLabel>
                </DxChartBarSeries>
            </SeriesTemplate>
        </DxChartCommonSeries>
    </DxChart>
    <div class="container">
        <div class="row">
            @if (gen)
            {
                <a class="offset-2" href="/@(tablename).csv" @onclick="()=>gen=false">点此下载</a>
            }
            else
            {
                <input class="col-2 form-control form-text" placeholder="表名" @bind="tablename" />
                <button class="col-2 btn btn-outline-success" @onclick="()=> Export()">导出数据</button>
            }
            @if (gen1)
            {
                <a class="offset-2" href="@($"/{exYear}年各类蔬菜信息统计表.csv")" @onclick="()=>gen1=false">点此下载</a>
            }
            else
            {
                <select class="offset-1 col-1 form-control custom-select" @bind="exYear">
                    @foreach (var item in jc2.Select(j => j.Year).Distinct())
                    {
                        <option value="@item">@item</option>
                    }
                </select>
                <button class="col-1 btn btn-outline-success" @onclick="()=> ExTable1()">年统计</button>
            }
            @if (gen2)
            {
                <a class="offset-1" href="@($"/按蔬菜名称统计信息表.csv")" @onclick="()=>gen2=false">点此下载</a>
            }
            else
            {
                <button class="offset-1 col-2 btn btn-outline-success" @onclick="()=> ExTable2()">各蔬菜统计</button>
            }
        </div>
    </div>
}
else if (mode == 0)
{
    <h2>蔬菜类别表</h2>
    if (!edit && !add)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>ClassId</th>
                    <th>ClassName</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in plist)
                {
                    <tr @onclick="()=>Edit(item)">
                        <td>
                            @item.ClassId
                        </td>
                        <td>@item.ClassName</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else if (!add)
    {
        <div class="form-group">
            <div class="col-form-label-lg">类id</div>
            <input class="form-row form-control form-text" disabled @bind="pe.ClassId" />

            <div class="col-form-label-lg">类名</div>
            <input class="form-row form-control form-text" @bind="pe.ClassName" />
        </div>
        <button class="btn btn-danger" @onclick="()=> { VegC.DelP(pe);edit = false; }">删除</button>
    }
    else
    {
        <div class="form-group">
            <div class="col-form-label-lg">类id</div>
            <input class="form-row form-control form-text" @bind="pe.ClassId" />
            <div class="col-form-label-lg">类名</div>
            <input class="form-row form-control form-text" @bind="pe.ClassName" />
        </div>
        <button class="btn btn-dark" @onclick="()=> { VegC.AddP(pe); add = false;Join2(); }">确定</button>
    }
}
else if (mode == 1)
{
    <h2>蔬菜信息表</h2>
    if (!edit && !add)
    {
        <div class="row">
            <select class="col-6 form-control custom-select" @bind="clid">
                @foreach (var item in plist)
                {
                    <option value="@item.ClassId">@item.ClassName</option>
                }
                <option value="@(' ')">所有类别</option>
            </select>
            <input class="col-3 form-control form-text" placeholder="搜索营养..." @oninput="SearchNutrition" />
            <input class="col-3 form-control form-text" placeholder="搜索名称..." @oninput="a=> {
                                                                                    sw3 = a.Value.ToString();
                                                                                    StateHasChanged();
                                                                                }" />
        </div>
        <table class="table">
            <thead>
                <tr>
                    <th>Nutrition</th>
                    <th>VegId</th>
                    <th>VegName</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in slist.Where(s => (clid == ' ' ? true : s.ClassId == clid)
             && s.Nutrition.Contains(sw2 ?? "")
             && s.VegName.Contains(sw3 ?? "")))
                {
                    <tr @onclick="()=>Edit(item)">
                        <td>@item.Nutrition</td>
                        <td>@item.VegId</td>
                        <td>@item.VegName</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else if (!add)
    {
        <div class="form-group">
            <div class="col-form-label-lg">营养</div>
            <input class="form-row form-control form-text" @bind="se.Nutrition" />
            <div class="col-form-label-lg">类别</div>
            <select class="form-row form-control custom-select" @bind="se.ClassId">
                @foreach (var item in plist)
                {
                    <option value="@item.ClassId">@item.ClassName</option>
                }
            </select>
            <div class="col-form-label-lg">蔬菜id</div>
            <input class="form-row form-control form-text" disabled @bind="se.VegId" />
            <div class="col-form-label-lg">菜名</div>
            <input class="form-row form-control form-text" @bind="se.VegName" />
        </div>
        <button class="btn btn-danger" @onclick="()=> { VegC.DelS(se); edit = false; }">删除</button>
    }
    else
    {
        se.VegId = slist.Count + 1;
        <div class="form-group">
            <div class="col-form-label-lg">营养</div>
            <input class="form-row form-control form-text" @bind="se.Nutrition" />
            <div class="col-form-label-lg">类别</div>
            <select class="form-row form-control custom-select" @bind="se.ClassId">
                @foreach (var item in plist)
                {
                    <option value="@item.ClassId">@item.ClassName</option>
                }
            </select>
            <div class="col-form-label-lg">蔬菜id</div>
            <input class="form-row form-control form-text" disabled @bind="se.VegId" />
            <div class="col-form-label-lg">菜名</div>
            <input class="form-row form-control form-text" @bind="se.VegName" />
        </div>
        <button class="btn btn-dark" @onclick="()=> { VegC.AddS(se); add = false;Join2(); }">确定</button>
    }
}
else if (mode == 2)
{
    <h2>蔬菜种植信息表</h2>
    if (!edit && !add)
    {

        <div class="row">
            <select class="col-3 form-control custom-select" @bind="slid">
                @foreach (var item in tlist.Select(t => t.Year).Distinct())
                {
                    <option value="@item">@item</option>
                }
                <option value="@("0000")">所有年份</option>
            </select>
            @*<input class="col-3 form-control form-text" placeholder="搜索营养..." @oninput="SearchNutrition" />*@
            <input class="col-3 form-control form-text" placeholder="搜索名称..." @oninput="a=> {
                                                                                    sw4 = a.Value.ToString();
                                                                                    StateHasChanged();
                                                                                }" />
        </div>
        tls = tlist.Where(t => (slist.Where(s => s.VegName.Contains(sw4 ?? "")).Select(t => t.VegId).Contains(t.VegId))
            && (slid == "0000" ? true : t.Year == slid));

        <table class="table">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Weight</th>
                    <th>Area</th>
                    <th>Year</th>
                    <th>VegName</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in tls)
                {
                    <tr @onclick="()=>Edit(item)">
                        <td>@item.Id</td>
                        <td>@item.Weight</td>
                        <td>@item.Area</td>
                        <td>@item.Year</td>
                        <td>@slist.Find(t => t.VegId == item.VegId).VegName</td>
                    </tr>
                }
            </tbody>
        </table>
        <DxChart Data="@tls">
            <DxChartTitle Text="统计结果" />
            <DxChartCommonSeries AggregationMethod="@Enumerable.Sum"
                                 NameField="@((TertiaryNode s) => slist.Find(t=>t.VegId== s.VegId).VegName)"
                                 ArgumentField="@((TertiaryNode s) => s.Year)"
                                 ValueField="@((TertiaryNode s) => s.Weight)">
                <SeriesTemplate Context="settings">
                    <DxChartBarSeries Settings="@settings">
                        <DxChartSeriesLabel Position="RelativePosition.Inside" Visible="true"></DxChartSeriesLabel>
                    </DxChartBarSeries>
                </SeriesTemplate>
            </DxChartCommonSeries>
        </DxChart>
    }
    else if (!add)
    {
        <div class="form-group">
            <div class="col-form-label-lg">种植信息id</div>
            <input class="form-row form-control form-text" disabled @bind="te.Id" />
            <div class="col-form-label-lg">蔬菜名</div>
            <select class="form-row form-control custom-select" @bind="te.VegId">
                @foreach (var item in slist)
                {
                    <option value="@item.VegId">@item.VegName</option>
                }
            </select>
            <div class="col-form-label-lg">蔬菜重量</div>
            <input class="form-row form-control form-text" @bind="te.Weight" />
            <div class="col-form-label-lg">蔬菜种植年份</div>
            <input class="form-row form-control form-text" @bind="te.Year" />
            <div class="col-form-label-lg">蔬菜种植面积</div>
            <input class="form-row form-control form-text" @bind="te.Area" />
        </div>
        <button class="btn btn-danger" @onclick="()=> { VegC.DelT(te); edit = false; }">删除</button>
    }
    else
    {
        te.Id = tlist.Count + 1;
        <div class="form-group">
            <div class="col-form-label-lg">种植信息id</div>
            <input class="form-row form-control form-text" disabled @bind="te.Id" />
            <div class="col-form-label-lg">蔬菜名</div>
            <select class="form-row form-control custom-select" @bind="te.VegId">
                @foreach (var item in slist)
                {
                    <option value="@item.VegId">@item.VegName</option>
                }
            </select>
            <div class="col-form-label-lg">蔬菜重量</div>
            <input class="form-row form-control form-text" @bind="te.Weight" />
            <div class="col-form-label-lg">蔬菜种植年份</div>
            <input class="form-row form-control form-text" @bind="te.Year" />
            <div class="col-form-label-lg">蔬菜种植面积</div>
            <input class="form-row form-control form-text" @bind="te.Area" />
        </div>
        <button class="btn btn-dark" @onclick="()=> { VegC.AddT(te);add = false;Join2(); }">确定</button>
    }
}
else if (mode == 3)
{
    <h2>总表</h2>
    <select class="form-row form-control custom-select" @onchange="a=> {
                                                                       orderby = a.Value.ToString();
                                                                       StateHasChanged();
                                                                   }">
        @foreach (var item in typeof(JoinedClass2).GetProperties())
        {
            if (item.Name == orderby)
            {
                <option value="@item.Name" selected>@item.Name</option>
            }
            else
            {
                <option value="@item.Name">@item.Name</option>
            }
        }
    </select>
    Join2();
    <table class="table">
        <thead>
            <tr>
                <th>ClassId</th>
                <th>ClassName</th>
                <th>Nutrition</th>
                <th>VegId</th>
                <th>VegName</th>
                <th>Year</th>
                <th>Weight</th>
                <th>Area</th>
                <th>Id</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in jc2.OrderByDescending(j => j.GetType().GetProperty(orderby).GetValue(j)))
            {
                <tr>
                    <td>
                        @item.ClassId
                    </td>
                    <td>@item.ClassName</td>
                    <td>@item.Nutrition</td>
                    <td>@item.VegId</td>
                    <td>@item.VegName</td>
                    <td>@item.Year</td>
                    <td>@item.Weight</td>
                    <td>@item.Area</td>
                    <td>@item.Id</td>
                </tr>
            }
        </tbody>
    </table>
    <DxChart Data="@jc2">
        <DxChartTitle Text="总表数据" />
        <DxChartCommonSeries AggregationMethod="@Enumerable.Sum"
                             NameField="@((JoinedClass2 s) => s.VegName)"
                             ArgumentField="@((JoinedClass2 s) => s.Year)"
                             ValueField="@((JoinedClass2 s) => s.Weight)">
            <SeriesTemplate Context="settings">
                <DxChartBarSeries Settings="@settings">
                    <DxChartSeriesLabel Position="RelativePosition.Inside" Visible="true"></DxChartSeriesLabel>
                </DxChartBarSeries>
            </SeriesTemplate>
        </DxChartCommonSeries>
    </DxChart>

}
else
{
    Analyze();
    e = slist.Where(s => s.Nutrition.Contains(st)).Select(s => s.VegName);
    <h2>统计</h2>
    <div class="container">
        <center><h3>各类蔬菜统计表</h3></center>
        <div class=" row">
            <div class="col-6">
                <table class="table" style="margin-top:50px">
                    <thead>
                        <tr>
                            <th>类名</th>
                            <th>总面积</th>
                            <th>总重量</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in ar1s)
                        {
                            <tr>
                                <td>@item.VegClass</td>
                                <td>@item.TotleSize</td>
                                <td>@item.TotleWeight</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="col-6">
                <DxChart Data="@ar1s">
                    <DxChartTitle Text="各类蔬菜总重量柱状图" />
                    <DxChartCommonSeries NameField="@((AnalyzeResult1 s) => s.VegClass)"
                                         ValueField="@((AnalyzeResult1 s) => s.TotleWeight)"
                                         ArgumentField="@((AnalyzeResult1 s) => s.VegClass)">
                        <SeriesTemplate Context="settings">
                            <DxChartBarSeries Settings="@settings">
                                <DxChartSeriesLabel Position="RelativePosition.Inside" Visible="true"></DxChartSeriesLabel>
                            </DxChartBarSeries>
                        </SeriesTemplate>
                    </DxChartCommonSeries>
                </DxChart>
            </div>
        </div>
        <center><h3>各蔬菜统计表</h3></center>
        <div class="row">
            <input class="offset-1 col-4 form-control form-text" @bind="startYear" />
            <input class="col-4 form-control form-text" @bind="EndYear" />
            @*<button class="col-2" @onclick>应用</button>*@
        </div>
        <div class=" row">
            <div class="col-6">
                <table class="table" style="margin-top:50px">
                    <thead>
                        <tr>
                            <th>类名</th>
                            <th>蔬菜名</th>
                            <th>总面积</th>
                            <th>总重量</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in ar2s)
                        {
                            <tr>
                                <td>@item.VegClass</td>
                                <td>@item.VegName</td>
                                <td>@item.TotleSize</td>
                                <td>@item.TotleWeight</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="col-6">
                <DxChart Data="@ar2s">
                    <DxChartTitle Text="各蔬菜种植信息柱状图" />
                    <DxChartCommonSeries NameField="@((AnalyzeResult2 s) => s.VegName)"
                                         ArgumentField="@((AnalyzeResult2 s) => s.VegClass)"
                                         ValueField="@((AnalyzeResult2 s) => s.TotleWeight)">
                        <SeriesTemplate Context="settings">
                            <DxChartBarSeries Settings="@settings">
                                <DxChartSeriesLabel Position="RelativePosition.Inside" Visible="true"></DxChartSeriesLabel>
                            </DxChartBarSeries>
                        </SeriesTemplate>
                    </DxChartCommonSeries>
                </DxChart>
            </div>
        </div>
        <center class="row">
            <h3 class="col-6">各蔬菜种植量统计表</h3>
            <h3 class="col-6">蔬菜营养查询表</h3>
        </center>
        <div class=" row">
            <div class="col-6">
                <table class="table" style="margin-top:50px">
                    <thead>
                        <tr>
                            <th>蔬菜名</th>
                            <th>总量</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in ar3s)
                        {
                            <tr>
                                <td>@item.VegName</td>
                                <td>@item.TotleNum</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>


            <div class="col-6">
                <input class="form-row form-control form-text" placeholder="搜索营养。。" @bind="st" />
                <table class="table" style="margin-top:50px">
                    <thead>
                        <tr>
                            <th>蔬菜名</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in e)
                        {
                            <tr>
                                <td>@item</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
@if (edit)
{
    <button class="btn btn-dark" @onclick="()=>SaveEdit()">保存</button>
}
else if (!search && mode < 3 && !add)
{
    <button class="btn btn-dark" @onclick="()=> { add = true;pe = new PrimaryNode();se = new SecondaryNode();te = new TertiaryNode(); }">添加</button>
}
@if (add || edit)
{
    <button class="btn btn-dark" @onclick="()=> { add = false;edit = false; }">返回</button>
}

@code {
    string sw3;
    bool gen1 = false;
    char clid = ' ';
    string slid = "0000";
    int mode = 0;
    bool edit = false;
    bool search = false;
    bool add = false;
    bool gen = false;
    string st = "";
    float fmin = 5.0f;
    float fmax = 100.0f;
    string sw;
    string sw2;
    string sw4;
    string tablename;
    string orderby = "Year";
    IEnumerable<JoinedClass2> searchResult;
    List<JoinedClass1> jc1;
    List<JoinedClass2> jc2;
    IEnumerable<JoinedClass2> jcSearch;
    IEnumerable<TertiaryNode> tls;
    List<VegDatabaseCS.PrimaryNode> plist;
    List<VegDatabaseCS.SecondaryNode> slist;
    List<VegDatabaseCS.TertiaryNode> tlist;
    IEnumerable<string> e;
    VegDatabaseCS.PrimaryNode pe;
    VegDatabaseCS.SecondaryNode se;
    VegDatabaseCS.TertiaryNode te;
    void Change()
    {
        mode = ++mode % 5;
        edit = false;
    }
    void Change(int i)
    {
        mode = i % 5;
        edit = false;
    }
    protected override void OnInitialized()
    {
        Init();
        base.OnInitialized();
    }
    void Init()
    {
        (plist, slist, tlist) = VegDatabaseCS.VegC.LoadData();
    }
    void Join1()
    {
        Init();
        jc1 = FirstJoin(plist, slist);
    }
    List<JoinedClass1> FirstJoin(List<VegDatabaseCS.PrimaryNode> pl, List<VegDatabaseCS.SecondaryNode> sl)
    {
        return pl.Join(sl, p => p.ClassId, s => s.ClassId, (p, s) =>
        {
            return new JoinedClass1
            {
                ClassId = p.ClassId,
                ClassName = p.ClassName,
                Nutrition = s.Nutrition,
                VegId = s.VegId,
                VegName = s.VegName

            };
        }).ToList();
    }
    List<JoinedClass2> SecondJoin(List<JoinedClass1> j, List<VegDatabaseCS.TertiaryNode> tl)
    {
        return j.Join(tl, j => j.VegId, t => t.VegId, (j, t) =>
        {
            return new JoinedClass2
            {
                ClassId = j.ClassId,
                ClassName = j.ClassName,
                Nutrition = j.Nutrition,
                VegId = j.VegId,
                VegName = j.VegName,
                Year = t.Year,
                Area = t.Area,
                Id = t.Id,
                Weight = t.Weight
            };
        }).ToList();
    }
    void Join2()
    {
        Join1();
        jc2 = SecondJoin(jc1, tlist);
        searchResult = jc2;
    }
    void Search(ChangeEventArgs args)
    {
        Init();
        //Join2();
        search = true;
        string key = args.Value.ToString();
        var temp = VegDatabaseCS.VegC.Search(key);
        searchResult = jc2.Where(jc =>
        {
            return temp.plist.Any(l => l.ClassId == jc.ClassId)
            || temp.slist.Any(l => l.VegId == jc.VegId)
            || temp.tlist.Any(l => l.Id == jc.Id);
        }).ToList();
    }
    void SearchNutrition(ChangeEventArgs args)
    {
        sw2 = args.Value.ToString();
        StateHasChanged();
    }
    void Edit<T>(T t)
    {
        if (t is VegDatabaseCS.PrimaryNode)
        {
            pe = t as VegDatabaseCS.PrimaryNode;
        }
        else if (t is VegDatabaseCS.SecondaryNode)
        {
            se = t as VegDatabaseCS.SecondaryNode;
        }
        else
        {
            te = t as VegDatabaseCS.TertiaryNode;
        }
        edit = true;
    }
    void SaveEdit()
    {
        edit = false;
        if (pe != null)
        {
            VegC.EditP(pe.ClassId, pe.ClassName);
        }
        if (se != null)
        {
            VegC.EditS(se);
        }
        if (te != null)
        {
            VegC.EditT(te);
        }
        Join2();
    }
    async void Export()
    {
        using var stwriter = new StreamWriter(
                File.Open(Path.Join(env.ContentRootPath, $"/wwwroot/{(string.IsNullOrEmpty(tablename)?"data":tablename)}.csv"), FileMode.Create, FileAccess.Write, FileShare.Read),
                 System.Text.Encoding.UTF8);
        using CsvHelper.CsvWriter writer = new CsvWriter(stwriter
                , CultureInfo.InvariantCulture);
        await writer.WriteRecordsAsync(jcSearch);
        await writer.FlushAsync();
        gen = true;
    }
    async ValueTask Export<T>(string fname, T t) where T : IEnumerable
    {
        using var stwriter = new StreamWriter(
        File.Open(Path.Join(env.ContentRootPath, $"/wwwroot/{fname}.csv"), FileMode.Create, FileAccess.Write, FileShare.Read),
         System.Text.Encoding.UTF8);
        using CsvHelper.CsvWriter writer = new CsvWriter(stwriter
                , CultureInfo.InvariantCulture);
        await writer.WriteRecordsAsync(t);
        await writer.FlushAsync();
    }
    IEnumerable<AnalyzeResult1> ar1s;
    IEnumerable<AnalyzeResult2> ar2s;
    IEnumerable<AnalyzeResult3> ar3s;
    int startYear = 2017;
    int EndYear = 2019;
    void Analyze()
    {
        ar1s = jc2.GroupBy(j => j.ClassId).Select(g => new AnalyzeResult1
        {
            VegClass = g.First().ClassName,
            TotleSize = g.Sum(g => g.Area),
            TotleWeight = g.Sum(g => g.Weight)
        });
        ar2s = jc2.Where(j => int.Parse(j.Year) >= startYear && int.Parse(j.Year) <= EndYear).GroupBy(j => j.VegId).Select(g => new AnalyzeResult2
        {
            TotleSize = g.Sum(g => g.Area),
            TotleWeight = g.Sum(g => g.Weight),
            VegClass = g.First().ClassName,
            VegName = g.First().VegName
        });
        ar3s = jc2.GroupBy(j => j.VegId).Select(g => new AnalyzeResult3
        {
            VegName = g.First().VegName,
            TotleNum = g.Count()
        });
    }
    string exYear = "2019";
    async void ExTable1()
    {
        var temp = jc2.Where(j => j.Year == exYear).GroupBy(j => j.ClassId).Select(g => new Ex1
        {
            TotleSize = g.Sum(t => t.Area),
            TotleWeight = g.Sum(t => t.Weight),
            VegClass = g.First().ClassName,
            Year = g.First().Year
        });
        await Export($"{exYear}年各类蔬菜信息统计表", temp);
        gen1 = true;
    }
    bool gen2 = false;
    async void ExTable2()
    {
        var temp = jc2.GroupBy(j => (j.VegId,j.Year)).Select(g => new 
        {
            TotleSize = g.Sum(t => t.Area),
            TotleWeight = g.Sum(t => t.Weight),
            VegClass = g.First().ClassName,
            Year = g.Key.Year,
            VegName = g.First().VegName
        });
        await Export($"按蔬菜名称统计信息表", temp);
        gen2 = true;
    }
}
