#pragma checksum "C:\Users\17697\source\repos\VegDatabaseFront\Pages\FetchData.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5d667ed26609b303b23faaf84f0caca4efb3c580"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace VegDatabaseFront.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\17697\source\repos\VegDatabaseFront\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\17697\source\repos\VegDatabaseFront\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\17697\source\repos\VegDatabaseFront\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\17697\source\repos\VegDatabaseFront\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\17697\source\repos\VegDatabaseFront\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\17697\source\repos\VegDatabaseFront\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\17697\source\repos\VegDatabaseFront\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\17697\source\repos\VegDatabaseFront\_Imports.razor"
using VegDatabaseFront;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\17697\source\repos\VegDatabaseFront\_Imports.razor"
using VegDatabaseFront.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\17697\source\repos\VegDatabaseFront\_Imports.razor"
using VegDatabaseCS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\17697\source\repos\VegDatabaseFront\_Imports.razor"
using System.Globalization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "C:\Users\17697\source\repos\VegDatabaseFront\_Imports.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "C:\Users\17697\source\repos\VegDatabaseFront\_Imports.razor"
using CsvHelper;

#line default
#line hidden
#nullable disable
#nullable restore
#line 14 "C:\Users\17697\source\repos\VegDatabaseFront\_Imports.razor"
using DevExpress.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 15 "C:\Users\17697\source\repos\VegDatabaseFront\_Imports.razor"
using System.Collections;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\17697\source\repos\VegDatabaseFront\Pages\FetchData.razor"
using VegDatabaseFront.Data;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/fetchdata")]
    public partial class FetchData : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 602 "C:\Users\17697\source\repos\VegDatabaseFront\Pages\FetchData.razor"
       
    string sw3;
    bool gen1 = false;
    char clid = ' ';
    string slid = "0000";
    int mode = 0;
    bool edit = false;
    bool search = false;
    bool add = false;
    bool gen = false;
    string st = "";
    float fmin = 5.0f;
    float fmax = 100.0f;
    string sw;
    string sw2;
    string sw4;
    string tablename;
    string orderby = "Year";
    IEnumerable<JoinedClass2> searchResult;
    List<JoinedClass1> jc1;
    List<JoinedClass2> jc2;
    IEnumerable<JoinedClass2> jcSearch;
    IEnumerable<TertiaryNode> tls;
    List<VegDatabaseCS.PrimaryNode> plist;
    List<VegDatabaseCS.SecondaryNode> slist;
    List<VegDatabaseCS.TertiaryNode> tlist;
    IEnumerable<string> e;
    VegDatabaseCS.PrimaryNode pe;
    VegDatabaseCS.SecondaryNode se;
    VegDatabaseCS.TertiaryNode te;
    void Change()
    {
        mode = ++mode % 5;
        edit = false;
    }
    void Change(int i)
    {
        mode = i % 5;
        edit = false;
    }
    protected override void OnInitialized()
    {
        Init();
        base.OnInitialized();
    }
    void Init()
    {
        (plist, slist, tlist) = VegDatabaseCS.VegC.LoadData();
    }
    void Join1()
    {
        Init();
        jc1 = FirstJoin(plist, slist);
    }
    List<JoinedClass1> FirstJoin(List<VegDatabaseCS.PrimaryNode> pl, List<VegDatabaseCS.SecondaryNode> sl)
    {
        return pl.Join(sl, p => p.ClassId, s => s.ClassId, (p, s) =>
        {
            return new JoinedClass1
            {
                ClassId = p.ClassId,
                ClassName = p.ClassName,
                Nutrition = s.Nutrition,
                VegId = s.VegId,
                VegName = s.VegName

            };
        }).ToList();
    }
    List<JoinedClass2> SecondJoin(List<JoinedClass1> j, List<VegDatabaseCS.TertiaryNode> tl)
    {
        return j.Join(tl, j => j.VegId, t => t.VegId, (j, t) =>
        {
            return new JoinedClass2
            {
                ClassId = j.ClassId,
                ClassName = j.ClassName,
                Nutrition = j.Nutrition,
                VegId = j.VegId,
                VegName = j.VegName,
                Year = t.Year,
                Area = t.Area,
                Id = t.Id,
                Weight = t.Weight
            };
        }).ToList();
    }
    void Join2()
    {
        Join1();
        jc2 = SecondJoin(jc1, tlist);
        searchResult = jc2;
    }
    void Search(ChangeEventArgs args)
    {
        Init();
        //Join2();
        search = true;
        string key = args.Value.ToString();
        var temp = VegDatabaseCS.VegC.Search(key);
        searchResult = jc2.Where(jc =>
        {
            return temp.plist.Any(l => l.ClassId == jc.ClassId)
            || temp.slist.Any(l => l.VegId == jc.VegId)
            || temp.tlist.Any(l => l.Id == jc.Id);
        }).ToList();
    }
    void SearchNutrition(ChangeEventArgs args)
    {
        sw2 = args.Value.ToString();
        StateHasChanged();
    }
    void Edit<T>(T t)
    {
        if (t is VegDatabaseCS.PrimaryNode)
        {
            pe = t as VegDatabaseCS.PrimaryNode;
        }
        else if (t is VegDatabaseCS.SecondaryNode)
        {
            se = t as VegDatabaseCS.SecondaryNode;
        }
        else
        {
            te = t as VegDatabaseCS.TertiaryNode;
        }
        edit = true;
    }
    void SaveEdit()
    {
        edit = false;
        if (pe != null)
        {
            VegC.EditP(pe.ClassId, pe.ClassName);
        }
        if (se != null)
        {
            VegC.EditS(se);
        }
        if (te != null)
        {
            VegC.EditT(te);
        }
        Join2();
    }
    async void Export()
    {
        using var stwriter = new StreamWriter(
                File.Open(Path.Join(env.ContentRootPath, $"/wwwroot/{(string.IsNullOrEmpty(tablename)?"data":tablename)}.csv"), FileMode.Create, FileAccess.Write, FileShare.Read),
                 System.Text.Encoding.UTF8);
        using CsvHelper.CsvWriter writer = new CsvWriter(stwriter
                , CultureInfo.InvariantCulture);
        await writer.WriteRecordsAsync(jcSearch);
        await writer.FlushAsync();
        gen = true;
    }
    async ValueTask Export<T>(string fname, T t) where T : IEnumerable
    {
        using var stwriter = new StreamWriter(
        File.Open(Path.Join(env.ContentRootPath, $"/wwwroot/{fname}.csv"), FileMode.Create, FileAccess.Write, FileShare.Read),
         System.Text.Encoding.UTF8);
        using CsvHelper.CsvWriter writer = new CsvWriter(stwriter
                , CultureInfo.InvariantCulture);
        await writer.WriteRecordsAsync(t);
        await writer.FlushAsync();
    }
    IEnumerable<AnalyzeResult1> ar1s;
    IEnumerable<AnalyzeResult2> ar2s;
    IEnumerable<AnalyzeResult3> ar3s;
    int startYear = 2017;
    int EndYear = 2019;
    void Analyze()
    {
        ar1s = jc2.GroupBy(j => j.ClassId).Select(g => new AnalyzeResult1
        {
            VegClass = g.First().ClassName,
            TotleSize = g.Sum(g => g.Area),
            TotleWeight = g.Sum(g => g.Weight)
        });
        ar2s = jc2.Where(j => int.Parse(j.Year) >= startYear && int.Parse(j.Year) <= EndYear).GroupBy(j => j.VegId).Select(g => new AnalyzeResult2
        {
            TotleSize = g.Sum(g => g.Area),
            TotleWeight = g.Sum(g => g.Weight),
            VegClass = g.First().ClassName,
            VegName = g.First().VegName
        });
        ar3s = jc2.GroupBy(j => j.VegId).Select(g => new AnalyzeResult3
        {
            VegName = g.First().VegName,
            TotleNum = g.Count()
        });
    }
    string exYear = "2019";
    async void ExTable1()
    {
        var temp = jc2.Where(j => j.Year == exYear).GroupBy(j => j.ClassId).Select(g => new Ex1
        {
            TotleSize = g.Sum(t => t.Area),
            TotleWeight = g.Sum(t => t.Weight),
            VegClass = g.First().ClassName,
            Year = g.First().Year
        });
        await Export($"{exYear}年各类蔬菜信息统计表", temp);
        gen1 = true;
    }
    bool gen2 = false;
    async void ExTable2()
    {
        var temp = jc2.GroupBy(j => (j.VegId,j.Year)).Select(g => new 
        {
            TotleSize = g.Sum(t => t.Area),
            TotleWeight = g.Sum(t => t.Weight),
            VegClass = g.First().ClassName,
            Year = g.Key.Year,
            VegName = g.First().VegName
        });
        await Export($"按蔬菜名称统计信息表", temp);
        gen2 = true;
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Microsoft.Extensions.Hosting.IHostEnvironment env { get; set; }
    }
}
#pragma warning restore 1591
